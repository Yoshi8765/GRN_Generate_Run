// Created by libAntimony v2.9.4
model *combined()

  // Compartments and Species:
  species $A_g1, $A_g2, $A_g3, A_m1, A_m2, A_m3, p_c1, A_p2, A_p_output, $C_g1;
  species C_m1, p_c2, $C_g2, C_m2, C_p2, $C_g3, C_m3, $B_g1, B_m1, p_c3, $B_g2;
  species B_m2, B_p2, $B_g3, B_m3, D_M1, D_M2, D_M3, D_p_input, D_P2;

  // Assignment Rules:
  A_generalized_hill1 := A_Vm_A1*(A_K_A1*p_c1^A_H1/(A_K_A1 + p_c1^A_H1)) + A_Vm_R1*(A_K_R1/(A_K_R1 + p_c1^A_H1));
  A_generalized_hill2 := A_Vm_A2*(A_K_A2*A_p2^A_H2/(A_K_A2 + A_p2^A_H2)) + A_Vm_R2*(A_K_R2/(A_K_R2 + A_p2^A_H2));
  A_generalized_hill3 := A_Vm_A1*(A_K_A1*p_c1^A_H1/(A_K_A1 + p_c1^A_H1)) + A_Vm_R1*(A_K_R1/(A_K_R1 + p_c1^A_H1));
  C_v1 := p_c2^C_h1/(C_K1^C_h1 + p_c2^C_h1);
  C_v2 := (C_Vm2*C_p2^C_h2/(C_K2^C_h2 + C_p2^C_h2))*(C_Vm3*p_c2^C_h3/(C_K3^C_h3 + p_c2^C_h3));
  B_v1 := p_c3^B_h1/(B_K1^B_h1 + p_c3^B_h1);
  B_v2 := (B_Vm2*B_p2^B_h2/(B_K2^B_h2 + B_p2^B_h2))*(B_Vm3*p_c3^B_h3/(B_K3^B_h3 + p_c3^B_h3));

  // Reactions:
  A_ts1: $A_g1 => A_m1; A_L1 + A_a_m1 - A_d_m1*A_m1;
  A_ts2: $A_g2 => A_m2; A_L2 + A_generalized_hill1 - A_d_m2*A_m2;
  A_ts3: $A_g3 => A_m3; A_L3 + A_generalized_hill2*A_generalized_hill3 - A_d_m3*A_m3;
  A_tl1: A_m1 => A_m1 + p_c1; A_a_p1*A_m1 - A_d_p1*p_c1;
  A_tl2: p_c1 + A_m2 => p_c1 + A_m2 + A_p2; A_a_p2*A_m2 - A_d_p2*A_p2;
  A_tl3: p_c1 + A_p2 + A_m3 => p_c1 + A_p2 + A_m3 + A_p_output; A_a_p3*A_m3 - A_d_p3*A_p_output;
  C_trnsc_m1: $C_g1 => C_m1; C_a_m1*C_g1 + C_L1;
  C_deg_m1: C_m1 => ; C_d_m1*C_m1;
  C_input: C_m1 => C_m1 + p_c2; C_a_p_input*C_m1;
  C_deg_p_input: p_c2 => ; C_d_p_input*p_c2;
  C_trnsc_m2: $C_g2 + p_c2 => p_c2 + C_m2; C_v1*C_g2 + C_L2;
  C_deg_m2: C_m2 => ; C_d_m2*C_m2;
  C_trnsl_p2: C_m2 => C_m2 + C_p2; C_a_p2*C_m2;
  C_deg_p2: C_p2 => ; C_d_p2*C_p2;
  C_trnsc_m3: $C_g3 + C_p2 + p_c2 => C_p2 + p_c2 + C_m3; C_v2*C_g3 + C_L3;
  C_deg_m3: C_m3 => ; C_d_m3*C_m3;
  C_trnsl_p_output: C_m3 => C_m3 + p_c1; C_a_p_output*C_m3;
  C_output: p_c1 => ; C_d_p_output*p_c1;
  B_trnsc_m1: $B_g1 => B_m1; B_a_m1*B_g1 + B_L1;
  B_deg_m1: B_m1 => ; B_d_m1*B_m1;
  B_input: B_m1 => B_m1 + p_c3; B_a_p_input*B_m1;
  B_deg_p_input: p_c3 => ; B_d_p_input*p_c3;
  B_trnsc_m2: $B_g2 + p_c3 => p_c3 + B_m2; B_v1*B_g2 + B_L2;
  B_deg_m2: B_m2 => ; B_d_m2*B_m2;
  B_trnsl_p2: B_m2 => B_m2 + B_p2; B_a_p2*B_m2;
  B_deg_p2: B_p2 => ; B_d_p2*B_p2;
  B_trnsc_m3: $B_g3 + B_p2 + p_c3 => B_p2 + p_c3 + B_m3; B_v2*B_g3 + B_L3;
  B_deg_m3: B_m3 => ; B_d_m3*B_m3;
  B_trnsl_p_output: B_m3 => B_m3 + p_c2; B_a_p_output*B_m3;
  B_output: p_c2 => ; B_d_p_output*p_c2;
  D_R0:  => D_M1; D_L1 + D_TM1 - D_dm1*D_M1;
  D_R2:  => D_M2; D_L2 + D_TM2*1/(1 + (D_p_input/D_k2)^D_H2) - D_dm2*D_M2;
  D_R3:  => D_M3; D_L3 + (D_TM3*1/(1 + (D_p_input/D_k3)^D_H3))*(D_P2/D_k3)^D_H3/(1 + (D_P2/D_k3)^D_H3) - D_dm3*D_M3;
  D_R4:  => D_p_input; D_Tr1*D_M1 - D_dp_input*D_p_input;
  D_R5:  => D_P2; D_Tr2*D_M2 - D_dp2*D_P2;
  D_R6:  => p_c3; D_Tr3*D_M3 - D_dp_output*p_c3;

  // Species initializations:
  A_g1 = 1;
  A_g2 = 1;
  A_g3 = 1;
  A_m1 = 0;
  A_m2 = 0;
  A_m3 = 0;
  p_c1 = 0;
  A_p2 = 0;
  A_p_output = 0;
  C_g1 = 1;
  C_m1 = 0;
  p_c2 = 0;
  C_g2 = 1;
  C_m2 = 0;
  C_p2 = 0;
  C_g3 = 1;
  C_m3 = 0;
  B_g1 = 1;
  B_m1 = 0;
  p_c3 = 0;
  B_g2 = 1;
  B_m2 = 0;
  B_p2 = 0;
  B_g3 = 1;
  B_m3 = 0;
  D_M1 = 0;
  D_M2 = 0;
  D_M3 = 0;
  D_p_input = 0;
  D_P2 = 0;

  // Variable initializations:
  A_Vm_A1 = 14.3614;
  A_K_A1 = 0.3345;
  A_H1 = 1.1137;
  A_Vm_R1 = 20.5478;
  A_K_R1 = 0.5321;
  A_Vm_A2 = 17.545;
  A_K_A2 = 0.4402;
  A_H2 = 1.0463;
  A_Vm_R2 = 18.8691;
  A_K_R2 = 0.5883;
  C_h1 = 2;
  C_K1 = 0.2;
  C_Vm2 = 20;
  C_h2 = 2;
  C_K2 = 0.2;
  C_Vm3 = 20;
  C_h3 = 2;
  C_K3 = 0.2;
  B_h1 = 2;
  B_K1 = 0.2;
  B_Vm2 = 20;
  B_h2 = 2;
  B_K2 = 0.2;
  B_Vm3 = 20;
  B_h3 = 2;
  B_K3 = 0.2;
  A_L1 = 0.0109;
  A_a_m1 = 14.5904;
  A_d_m1 = 0.3933;
  A_L2 = 0.0103;
  A_d_m2 = 0.5794;
  A_L3 = 0.0087;
  A_d_m3 = 0.5564;
  A_a_p1 = 0.52;
  A_d_p1 = 0.4863;
  A_a_p2 = 0.2035;
  A_d_p2 = 0.6181;
  A_a_p3 = 0.6495;
  A_d_p3 = 0.4517;
  C_a_m1 = 20;
  C_L1 = 0.1;
  C_d_m1 = 0.6;
  C_a_p_input = 1;
  C_d_p_input = 0.09;
  C_L2 = 0.1;
  C_d_m2 = 0.6;
  C_a_p2 = 1;
  C_d_p2 = 0.09;
  C_L3 = 0.1;
  C_d_m3 = 0.6;
  C_a_p_output = 1;
  C_d_p_output = 0.09;
  B_a_m1 = 20;
  B_L1 = 0.1;
  B_d_m1 = 0.6;
  B_a_p_input = 1;
  B_d_p_input = 0.09;
  B_L2 = 0.1;
  B_d_m2 = 0.6;
  B_a_p2 = 1;
  B_d_p2 = 0.09;
  B_L3 = 0.1;
  B_d_m3 = 0.6;
  B_a_p_output = 1;
  B_d_p_output = 0.09;
  D_L1 = 0.01;
  D_TM1 = 15;
  D_dm1 = 0.5;
  D_L2 = 0.01;
  D_TM2 = 15;
  D_k2 = 0.65;
  D_H2 = 1;
  D_dm2 = 0.5;
  D_L3 = 0.01;
  D_TM3 = 15;
  D_k3 = 0.65;
  D_H3 = 2;
  D_dm3 = 0.5;
  D_Tr1 = 0.5;
  D_dp_input = 0.5;
  D_Tr2 = 0.5;
  D_dp2 = 0.5;
  D_Tr3 = 0.5;
  D_dp_output = 0.5;
  C_a_m2 = 20;
  C_a_m3 = 20;
  C_Vm1 = 20;
  B_a_m2 = 20;
  B_a_m3 = 20;
  B_Vm1 = 20;
  D_k1 = 0.65;
  D_H1 = 1;

  // Other declarations:
  var A_generalized_hill1, A_generalized_hill2, A_generalized_hill3, C_v1;
  var C_v2, B_v1, B_v2;
  const A_Vm_A1, A_K_A1, A_H1, A_Vm_R1, A_K_R1, A_Vm_A2, A_K_A2, A_H2, A_Vm_R2;
  const A_K_R2, C_h1, C_K1, C_Vm2, C_h2, C_K2, C_Vm3, C_h3, C_K3, B_h1, B_K1;
  const B_Vm2, B_h2, B_K2, B_Vm3, B_h3, B_K3, A_L1, A_a_m1, A_d_m1, A_L2;
  const A_d_m2, A_L3, A_d_m3, A_a_p1, A_d_p1, A_a_p2, A_d_p2, A_a_p3, A_d_p3;
  const C_a_m1, C_L1, C_d_m1, C_a_p_input, C_d_p_input, C_L2, C_d_m2, C_a_p2;
  const C_d_p2, C_L3, C_d_m3, C_a_p_output, C_d_p_output, B_a_m1, B_L1, B_d_m1;
  const B_a_p_input, B_d_p_input, B_L2, B_d_m2, B_a_p2, B_d_p2, B_L3, B_d_m3;
  const B_a_p_output, B_d_p_output, D_L1, D_TM1, D_dm1, D_L2, D_TM2, D_k2;
  const D_H2, D_dm2, D_L3, D_TM3, D_k3, D_H3, D_dm3, D_Tr1, D_dp_input, D_Tr2;
  const D_dp2, D_Tr3, D_dp_output, C_a_m2, C_a_m3, C_Vm1, B_a_m2, B_a_m3;
  const B_Vm1, D_k1, D_H1;
end
