// Created by libAntimony v2.9.4
model *combined()

  // Compartments and Species:
  species $A_N, $A_AA, A_m1, A_m2, A_m3, p_c1, A_p2, A_p_o, $B_N, $B_AA, B_m1;
  species B_m2, B_m3, B_m4, p_c2, B_p2, B_p3, $C_N, $C_AA, C_m1, C_m2, C_m3;
  species p_c3, C_p2, $D_N, $D_AA, D_m1, D_m2, D_m3, D_m4, p_c4, D_p2, D_p3;
  species $E_N, $E_AA, E_m1, E_m2, E_m3, E_m4, E_p_i, E_p2, E_p3;

  // Assignment Rules:
  A_generalized_hill1 := A_Vm_A1*(A_K_A1*p_c1^A_H1/(A_K_A1 + p_c1^A_H1)) + A_Vm_R1*(A_K_R1/(A_K_R1 + p_c1^A_H1));
  A_generalized_hill2 := A_Vm_A2*(A_K_A2*A_p2^A_H2/(A_K_A2 + A_p2^A_H2)) + A_Vm_R2*(A_K_R2/(A_K_R2 + A_p2^A_H2));
  A_generalized_hill3 := A_Vm_A1*(A_K_A1*p_c1^A_H1/(A_K_A1 + p_c1^A_H1)) + A_Vm_R1*(A_K_R1/(A_K_R1 + p_c1^A_H1));
  B_generalized_hill1 := B_Vm_A1*(B_K_A1*p_c2^B_H1/(B_K_A1 + p_c2^B_H1)) + B_Vm_R1*(B_K_R1/(B_K_R1 + p_c2^B_H1));
  B_generalized_hill2 := B_Vm_A2*(B_K_A2*B_p2^B_H2/(B_K_A2 + B_p2^B_H2)) + B_Vm_R2*(B_K_R2/(B_K_R2 + B_p2^B_H2));
  B_generalized_hill3 := B_Vm_A2*(B_K_A2*B_p2^B_H2/(B_K_A2 + B_p2^B_H2)) + B_Vm_R2*(B_K_R2/(B_K_R2 + B_p2^B_H2));
  B_generalized_hill4 := B_Vm_A2*(B_K_A2*B_p2^B_H2/(B_K_A2 + B_p2^B_H2)) + B_Vm_R2*(B_K_R2/(B_K_R2 + B_p2^B_H2));
  C_generalized_hill1 := C_Vm_A1*(C_K_A1*p_c3^C_H1/(C_K_A1 + p_c3^C_H1)) + C_Vm_R1*(C_K_R1/(C_K_R1 + p_c3^C_H1));
  C_generalized_hill2 := C_Vm_A2*(C_K_A2*C_p2^C_H2/(C_K_A2 + C_p2^C_H2)) + C_Vm_R2*(C_K_R2/(C_K_R2 + C_p2^C_H2));
  C_generalized_hill3 := C_Vm_A1*(C_K_A1*p_c3^C_H1/(C_K_A1 + p_c3^C_H1)) + C_Vm_R1*(C_K_R1/(C_K_R1 + p_c3^C_H1));
  D_generalized_hill1 := D_Vm_A1*(D_K_A1*p_c4^D_H1/(D_K_A1 + p_c4^D_H1)) + D_Vm_R1*(D_K_R1/(D_K_R1 + p_c4^D_H1));
  D_generalized_hill2 := D_Vm_A2*(D_K_A2*D_p2^D_H2/(D_K_A2 + D_p2^D_H2)) + D_Vm_R2*(D_K_R2/(D_K_R2 + D_p2^D_H2));
  D_generalized_hill3 := D_Vm_A2*(D_K_A2*D_p2^D_H2/(D_K_A2 + D_p2^D_H2)) + D_Vm_R2*(D_K_R2/(D_K_R2 + D_p2^D_H2));
  D_generalized_hill4 := D_Vm_A2*(D_K_A2*D_p2^D_H2/(D_K_A2 + D_p2^D_H2)) + D_Vm_R2*(D_K_R2/(D_K_R2 + D_p2^D_H2));
  E_generalized_hill1 := E_Vm_A1*(E_K_A1*E_p_i^E_H1/(E_K_A1 + E_p_i^E_H1)) + E_Vm_R1*(E_K_R1/(E_K_R1 + E_p_i^E_H1));
  E_generalized_hill2 := E_Vm_A2*(E_K_A2*E_p2^E_H2/(E_K_A2 + E_p2^E_H2)) + E_Vm_R2*(E_K_R2/(E_K_R2 + E_p2^E_H2));
  E_generalized_hill3 := E_Vm_A2*(E_K_A2*E_p2^E_H2/(E_K_A2 + E_p2^E_H2)) + E_Vm_R2*(E_K_R2/(E_K_R2 + E_p2^E_H2));
  E_generalized_hill4 := E_Vm_A2*(E_K_A2*E_p2^E_H2/(E_K_A2 + E_p2^E_H2)) + E_Vm_R2*(E_K_R2/(E_K_R2 + E_p2^E_H2));

  // Reactions:
  A_ts1: $A_N => A_m1; A_L1 + A_a_m1 - A_d_m1*A_m1;
  A_ts2: $A_N => A_m2; A_L2 + A_generalized_hill1 - A_d_m2*A_m2;
  A_ts3: $A_N => A_m3; A_L3 + A_generalized_hill2*A_generalized_hill3 - A_d_m3*A_m3;
  A_tl1: $A_AA => p_c1; A_a_p1*A_m1 - A_d_p1*p_c1;
  A_tl2: $A_AA => A_p2; A_a_p2*A_m2 - A_d_p2*A_p2;
  A_tl3: $A_AA => A_p_o; A_a_p3*A_m3 - A_d_p3*A_p_o;
  B_ts1: $B_N => B_m1; B_L1 + B_a_m1 - B_d_m1*B_m1;
  B_ts2: $B_N => B_m2; B_L2 + B_a_m2 - B_d_m2*B_m2;
  B_ts3: $B_N => B_m3; B_L3 + B_generalized_hill1*B_generalized_hill2 - B_d_m3*B_m3;
  B_ts4: $B_N => B_m4; B_L4 + B_generalized_hill3*B_generalized_hill4 - B_d_m4*B_m4;
  B_tl1: $B_AA => p_c2; B_a_p1*B_m1 - B_d_p1*p_c2;
  B_tl2: $B_AA => B_p2; B_a_p2*B_m2 - B_d_p2*B_p2;
  B_tl3: $B_AA => B_p3; B_a_p3*B_m3 - B_d_p3*B_p3;
  B_tl4: $B_AA => p_c1; B_a_p4*B_m4 - B_d_p4*p_c1;
  C_ts1: $C_N => C_m1; C_L1 + C_a_m1 - C_d_m1*C_m1;
  C_ts2: $C_N => C_m2; C_L2 + C_generalized_hill1 - C_d_m2*C_m2;
  C_ts3: $C_N => C_m3; C_L3 + C_generalized_hill2*C_generalized_hill3 - C_d_m3*C_m3;
  C_tl1: $C_AA => p_c3; C_a_p1*C_m1 - C_d_p1*p_c3;
  C_tl2: $C_AA => C_p2; C_a_p2*C_m2 - C_d_p2*C_p2;
  C_tl3: $C_AA => p_c2; C_a_p3*C_m3 - C_d_p3*p_c2;
  D_ts1: $D_N => D_m1; D_L1 + D_a_m1 - D_d_m1*D_m1;
  D_ts2: $D_N => D_m2; D_L2 + D_a_m2 - D_d_m2*D_m2;
  D_ts3: $D_N => D_m3; D_L3 + D_generalized_hill1*D_generalized_hill2 - D_d_m3*D_m3;
  D_ts4: $D_N => D_m4; D_L4 + D_generalized_hill3*D_generalized_hill4 - D_d_m4*D_m4;
  D_tl1: $D_AA => p_c4; D_a_p1*D_m1 - D_d_p1*p_c4;
  D_tl2: $D_AA => D_p2; D_a_p2*D_m2 - D_d_p2*D_p2;
  D_tl3: $D_AA => D_p3; D_a_p3*D_m3 - D_d_p3*D_p3;
  D_tl4: $D_AA => p_c3; D_a_p4*D_m4 - D_d_p4*p_c3;
  E_ts1: $E_N => E_m1; E_L1 + E_a_m1 - E_d_m1*E_m1;
  E_ts2: $E_N => E_m2; E_L2 + E_a_m2 - E_d_m2*E_m2;
  E_ts3: $E_N => E_m3; E_L3 + E_generalized_hill1*E_generalized_hill2 - E_d_m3*E_m3;
  E_ts4: $E_N => E_m4; E_L4 + E_generalized_hill3*E_generalized_hill4 - E_d_m4*E_m4;
  E_tl1: $E_AA => E_p_i; E_a_p1*E_m1 - E_d_p1*E_p_i;
  E_tl2: $E_AA => E_p2; E_a_p2*E_m2 - E_d_p2*E_p2;
  E_tl3: $E_AA => E_p3; E_a_p3*E_m3 - E_d_p3*E_p3;
  E_tl4: $E_AA => p_c4; E_a_p4*E_m4 - E_d_p4*p_c4;

  // Species initializations:
  A_N = 1;
  A_AA = 1;
  A_m1 = 28.7219430485762;
  A_m2 = 30.8495607756304;
  A_m3 = 127.380350503364;
  p_c1 = 47.7588327007806;
  A_p2 = 36.9271239219621;
  A_p_o = 84.8603990846788;
  B_N = 1;
  B_AA = 1;
  B_m1 = 45.2859844902591;
  B_m2 = 41.6487673083418;
  B_m3 = 72.2353750073019;
  B_m4 = 61.1341857424493;
  p_c2 = 57.7148473650119;
  B_p2 = 47.3183235138351;
  B_p3 = 42.6122046969243;
  C_N = 1;
  C_AA = 1;
  C_m1 = 28.7219430485762;
  C_m2 = 30.8495607756304;
  C_m3 = 127.380350503364;
  p_c3 = 47.7588327007806;
  C_p2 = 36.9271239219621;
  D_N = 1;
  D_AA = 1;
  D_m1 = 45.2859844902591;
  D_m2 = 41.6487673083418;
  D_m3 = 72.519278106862;
  D_m4 = 61.1341857424493;
  p_c4 = 50.3026877791881;
  D_p2 = 47.3183235138351;
  D_p3 = 42.779681324426;
  E_N = 1;
  E_AA = 1;
  E_m1 = 45.2859844902591;
  E_m2 = 41.6487673083418;
  E_m3 = 73.2833381777512;
  E_m4 = 61.1341857424493;
  E_p_i = 37.5835218114456;
  E_p2 = 47.3183235138351;
  E_p3 = 43.2304062516267;

  // Variable initializations:
  A_Vm_A1 = 18.6654;
  A_K_A1 = 0.7343;
  A_H1 = 1.1277;
  A_Vm_R1 = 10.8858;
  A_K_R1 = 0.8369;
  A_Vm_A2 = 11.6243;
  A_K_A2 = 0.5014;
  A_H2 = 0.906;
  A_Vm_R2 = 13.8183;
  A_K_R2 = 0.484;
  B_Vm_A1 = 12.7757;
  B_K_A1 = 0.3313;
  B_H1 = 1.1119;
  B_Vm_R1 = 21.4321;
  B_K_R1 = 0.5088;
  B_Vm_A2 = 18.2488;
  B_K_A2 = 0.3496;
  B_H2 = 1.2349;
  B_Vm_R2 = 13.7369;
  B_K_R2 = 0.8939;
  C_Vm_A1 = 18.6654;
  C_K_A1 = 0.7343;
  C_H1 = 1.1277;
  C_Vm_R1 = 10.8858;
  C_K_R1 = 0.8369;
  C_Vm_A2 = 11.6243;
  C_K_A2 = 0.5014;
  C_H2 = 0.906;
  C_Vm_R2 = 13.8183;
  C_K_R2 = 0.484;
  D_Vm_A1 = 12.7757;
  D_K_A1 = 0.3313;
  D_H1 = 1.1119;
  D_Vm_R1 = 21.4321;
  D_K_R1 = 0.5088;
  D_Vm_A2 = 18.2488;
  D_K_A2 = 0.3496;
  D_H2 = 1.2349;
  D_Vm_R2 = 13.7369;
  D_K_R2 = 0.8939;
  E_Vm_A1 = 12.7757;
  E_K_A1 = 0.3313;
  E_H1 = 1.1119;
  E_Vm_R1 = 21.4321;
  E_K_R1 = 0.5088;
  E_Vm_A2 = 18.2488;
  E_K_A2 = 0.3496;
  E_H2 = 1.2349;
  E_Vm_R2 = 13.7369;
  E_K_R2 = 0.8939;
  A_L1 = 0.0082;
  A_a_m1 = 11.9947;
  A_d_m1 = 0.4179;
  A_L2 = 0.0096;
  A_d_m2 = 0.4442;
  A_L3 = 0.0136;
  A_d_m3 = 0.6418;
  A_a_p1 = 0.448;
  A_d_p1 = 0.5004;
  A_a_p2 = 0.5918;
  A_d_p2 = 0.4944;
  A_a_p3 = 0.3782;
  A_d_p3 = 0.5677;
  B_L1 = 0.0073;
  B_a_m1 = 23.9354;
  B_d_m1 = 0.5287;
  B_L2 = 0.0113;
  B_a_m2 = 12.3209;
  B_d_m2 = 0.2961;
  B_L3 = 0.0137;
  B_d_m3 = 0.3883;
  B_L4 = 0.009;
  B_d_m4 = 0.6838;
  B_a_p1 = 0.6353;
  B_d_p1 = 0.7655;
  B_a_p2 = 0.5475;
  B_d_p2 = 0.4819;
  B_a_p3 = 0.3963;
  B_d_p3 = 0.6718;
  B_a_p4 = 0.578;
  B_d_p4 = 0.5089;
  C_L1 = 0.0082;
  C_a_m1 = 11.9947;
  C_d_m1 = 0.4179;
  C_L2 = 0.0096;
  C_d_m2 = 0.4442;
  C_L3 = 0.0136;
  C_d_m3 = 0.6418;
  C_a_p1 = 0.448;
  C_d_p1 = 0.5004;
  C_a_p2 = 0.5918;
  C_d_p2 = 0.4944;
  C_a_p3 = 0.3782;
  C_d_p3 = 0.5677;
  D_L1 = 0.0073;
  D_a_m1 = 23.9354;
  D_d_m1 = 0.5287;
  D_L2 = 0.0113;
  D_a_m2 = 12.3209;
  D_d_m2 = 0.2961;
  D_L3 = 0.0137;
  D_d_m3 = 0.3883;
  D_L4 = 0.009;
  D_d_m4 = 0.6838;
  D_a_p1 = 0.6353;
  D_d_p1 = 0.7655;
  D_a_p2 = 0.5475;
  D_d_p2 = 0.4819;
  D_a_p3 = 0.3963;
  D_d_p3 = 0.6718;
  D_a_p4 = 0.578;
  D_d_p4 = 0.5089;
  E_L1 = 0.0073;
  E_a_m1 = 23.9354;
  E_d_m1 = 0.5287;
  E_L2 = 0.0113;
  E_a_m2 = 12.3209;
  E_d_m2 = 0.2961;
  E_L3 = 0.0137;
  E_d_m3 = 0.3883;
  E_L4 = 0.009;
  E_d_m4 = 0.6838;
  E_a_p1 = 0.6353;
  E_d_p1 = 0.7655;
  E_a_p2 = 0.5475;
  E_d_p2 = 0.4819;
  E_a_p3 = 0.3963;
  E_d_p3 = 0.6718;
  E_a_p4 = 0.578;
  E_d_p4 = 0.5089;

  // Other declarations:
  var A_generalized_hill1, A_generalized_hill2, A_generalized_hill3, B_generalized_hill1;
  var B_generalized_hill2, B_generalized_hill3, B_generalized_hill4, C_generalized_hill1;
  var C_generalized_hill2, C_generalized_hill3, D_generalized_hill1, D_generalized_hill2;
  var D_generalized_hill3, D_generalized_hill4, E_generalized_hill1, E_generalized_hill2;
  var E_generalized_hill3, E_generalized_hill4;
  const A_Vm_A1, A_K_A1, A_H1, A_Vm_R1, A_K_R1, A_Vm_A2, A_K_A2, A_H2, A_Vm_R2;
  const A_K_R2, B_Vm_A1, B_K_A1, B_H1, B_Vm_R1, B_K_R1, B_Vm_A2, B_K_A2, B_H2;
  const B_Vm_R2, B_K_R2, C_Vm_A1, C_K_A1, C_H1, C_Vm_R1, C_K_R1, C_Vm_A2;
  const C_K_A2, C_H2, C_Vm_R2, C_K_R2, D_Vm_A1, D_K_A1, D_H1, D_Vm_R1, D_K_R1;
  const D_Vm_A2, D_K_A2, D_H2, D_Vm_R2, D_K_R2, E_Vm_A1, E_K_A1, E_H1, E_Vm_R1;
  const E_K_R1, E_Vm_A2, E_K_A2, E_H2, E_Vm_R2, E_K_R2, A_L1, A_a_m1, A_d_m1;
  const A_L2, A_d_m2, A_L3, A_d_m3, A_a_p1, A_d_p1, A_a_p2, A_d_p2, A_a_p3;
  const A_d_p3, B_L1, B_a_m1, B_d_m1, B_L2, B_a_m2, B_d_m2, B_L3, B_d_m3;
  const B_L4, B_d_m4, B_a_p1, B_d_p1, B_a_p2, B_d_p2, B_a_p3, B_d_p3, B_a_p4;
  const B_d_p4, C_L1, C_a_m1, C_d_m1, C_L2, C_d_m2, C_L3, C_d_m3, C_a_p1;
  const C_d_p1, C_a_p2, C_d_p2, C_a_p3, C_d_p3, D_L1, D_a_m1, D_d_m1, D_L2;
  const D_a_m2, D_d_m2, D_L3, D_d_m3, D_L4, D_d_m4, D_a_p1, D_d_p1, D_a_p2;
  const D_d_p2, D_a_p3, D_d_p3, D_a_p4, D_d_p4, E_L1, E_a_m1, E_d_m1, E_L2;
  const E_a_m2, E_d_m2, E_L3, E_d_m3, E_L4, E_d_m4, E_a_p1, E_d_p1, E_a_p2;
  const E_d_p2, E_a_p3, E_d_p3, E_a_p4, E_d_p4;
end
