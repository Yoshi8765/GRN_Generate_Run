antStr = ('''
model *template()

  // Compartments and Species:
  species mRNA, protein ;

  // Assignment Rules:
  v1 := expression with H1 , Vm1 , K1, P1, P2, etc ;

  // Reactions:
  transcription : => mRNA    ; L1 + v1 - d_mRNA * mRNA;
  translation   : => protein ; a_protein * mRNA - d_protein * protein;
  
  // Species initializations:
  mRNA    = 0;
  protein = 0;
  
  // Variable initializations:
  H1     = 0;
  K1     = 0;
  Vm1    = 0;
  L1     = 0;
  d_mRNA = 0;

  // Other declarations:
  var v1 ;
  const H1, K1, Vm1, L1, d_mRNA, a_protein, d_protein;
end
''')


### Optional things to run a simulation. ###
import tellurium as te
import numpy as np

np.set_printoptions(linewidth=160)
#%%
r=te.loada(antStr)
r.reset()
#plt.close("all")
#res = r.simulate(0,50,1000)
#r.plot()
#r.draw()
#r.reset()
r.exportToAntimony('[].txt') #export as antimony